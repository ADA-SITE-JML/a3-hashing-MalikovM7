using System;
using System.IO;
using System.Text;
using System.Security.Cryptography;

class Program
{
    static int n; 
    static int s;

    static void Main()
    {
        // using validation techniques, I asked the user to write a proper number of buckets n and the size of records s in it 
        while (true)
        {
            Console.Write("Enter number of buckets (n): ");
            if (int.TryParse(Console.ReadLine(), out n) && n > 0) break;
            Console.WriteLine("Please enter a valid positive number for n.");
        }

        while (true)
        {
            Console.Write("Enter max number of strings per bucket file (s): ");
            if (int.TryParse(Console.ReadLine(), out s) && s > 0) break;
            Console.WriteLine("Please enter a valid positive number for s.");
        }

        Console.WriteLine("\nStart typing strings. Press Ctrl+C to exit.\n");

        Console.CancelKeyPress += (sender, e) =>
        {
            Console.WriteLine("\nExiting...");
            e.Cancel = true;
            Environment.Exit(0);
        };

        //If you are using mac , press control+c

        


        
    }

    //Main Hashing function (separate method from main)

    static int GetHashBucketIndex(string input, int bucketCount)
    {
        using (SHA256 sha256 = SHA256.Create())
        {
            byte[] hashBytes = sha256.ComputeHash(Encoding.UTF8.GetBytes(input));
            int hashInt = BitConverter.ToInt32(hashBytes, 0);
            return (Math.Abs(hashInt) % bucketCount) + 1;
        }
    }


    }
